변수(Variable)
값을 저장할 수 있는 메모리상의 공간, 단 하나의 값을 저장할 수 있는 메모리 공간
새로운 값을 저장하면 기존의 값은 사라진다.
public static void main(String[] args)  {

        System.out.println("Hello, World!");

}

변수의 선언 & 초기화

int age;    //  age라는 이름의 변수를 선언함.

int(integer) : 변수타입 / age : 변수 이름

int b1uffer // b1uffer라는 이름의 변수를 선언함

정수를 저장할 땐 변수의 타입을 int로 지정함

초기화(initialization)
변수를 선언한 이후에 반드시 초기화 해야함.(저장해야함)
int age = 25; // 변수 age를 선언하고 25로 초기화(저장)한다. 즉 age라는 공간에 25를 저장함




변수의 명명규칙
식별자(indentifier) : 프로그래밍에서 사용되는 모든 이름
식별자는 같은 영역 내에서 반드시 서로 구분될 수 있어야 함.

    1. 대소문자가 구분되며 길이에 제한이 없다.
        ex : True와 true는 서로 다른 것으로 간주된다.
    
    2. 변수에 ^예약어^ 를 사용해서는 안된다.
        true는 예약어라서 사용할 수 없지만, True는 사용할 수 있다.

    3. 숫자로 시작해서는 안된다.
        top10은 허용되지만, 7up은 허용되지 않는다.

    4. 특수문자는 '_' 와 '$'만을 허용한다.
        $harp는 허용되지만, S#arp는 허용되지 않는다.

        // 특수문자 '_'는 스네이크 방식 구분법에서 사용하고, '$' 특수문자는 사용하지 않는 것이 좋다.

※ 예약어{키워드(keyword), 리져브드 워드(reserved word)} : 프로그래밍 언어의 구문에 사용되는 단어

그 외 프로그래머들에게 권장하는 규칙들

    1. 클래스 이름의 첫 글자는 항상 대문자로 한다. (ex : public class : VarEx 1) // 파스칼
        - 변수와 메서드 이름의 첫 글자는 항상 소문자로 한다. (ex : int carNumber) // 카멜
    
    2. 여러 단어로 이루어진 이름은 단어의 첫 글자를 대문자로 함.

    3. 상수의 이름은 모두 대문자로 한다. 여러 단어로 이루어진 경우 '_'로 구분한다. // 대문자 + 스네이크
        ex : PI, MAX_NUMBER

    ※ 클래스 이름은 파스칼, 변수 이름은 카멜, 상수는 대문자 + 스네이크

    ※ 변수랑 클래스명은 모두 영문으로 작성하기.

    char, byte, int